{"ast":null,"code":"var _jsxFileName = \"D:\\\\2ndProject\\\\2ndproject\\\\src\\\\pages\\\\game\\\\game_page.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./game_page.module.css\";\nimport { SLRdetect } from \"../../utilities/detect.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const width = 500;\n    const height = 500;\n    canvas.width = width;\n    canvas.height = height;\n    const colors = {\n      gray: \"#646464\",\n      green: \"#4CD038\",\n      red: \"#C80000\",\n      white: \"#FFFFFF\",\n      yellow: \"#FFE800\"\n    };\n    const roadWidth = 200;\n    const markerWidth = 10;\n    const markerHeight = 50;\n    const leftLane = 200;\n    const rightLane = 300;\n    const lanes = [leftLane, rightLane];\n    const playerX = leftLane; // Start in the left lane\n    const playerY = 400;\n    const fps = 60;\n    let gameover = true;\n    let speed = 0.9;\n    let score = 0;\n    let lastTime = Date.now();\n    const carImage = new Image();\n    carImage.src = require(\"../../assets/imgs/game_imgs/car.png\");\n    const crashImage = new Image();\n    crashImage.src = require(\"../../assets/imgs/game_imgs/crash.png\");\n    const vehicleImages = [require(\"../../assets/imgs/game_imgs/pickup_truck.png\"), require(\"../../assets/imgs/game_imgs/semi_trailer.png\"), require(\"../../assets/imgs/game_imgs/taxi.png\"), require(\"../../assets/imgs/game_imgs/van.png\")].map(src => {\n      const img = new Image();\n      img.src = src;\n      return img;\n    });\n    const player = {\n      x: playerX,\n      y: playerY,\n      width: 45,\n      height: 90\n    };\n    let vehicles = [];\n    let laneMarkerMoveY = 0;\n    let crashRect = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n    const words = [\"dog\", \"buy\", \"sad\", \"bad\", \"rat\", \"cow\", \"owl\", \"bee\"];\n    let currentWord = words[Math.floor(Math.random() * words.length)];\n    let typedWord = \"\";\n    const letterImages = {\n      a: new Image(),\n      b: new Image(),\n      c: new Image(),\n      d: new Image(),\n      e: new Image(),\n      f: new Image(),\n      g: new Image(),\n      h: new Image(),\n      i: new Image(),\n      j: new Image(),\n      k: new Image(),\n      l: new Image(),\n      m: new Image(),\n      n: new Image(),\n      o: new Image(),\n      p: new Image(),\n      q: new Image(),\n      r: new Image(),\n      s: new Image(),\n      t: new Image(),\n      u: new Image(),\n      v: new Image(),\n      w: new Image(),\n      x: new Image(),\n      y: new Image(),\n      z: new Image(),\n      yes: new Image()\n    };\n    letterImages[\"a\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/A.png\");\n    letterImages[\"b\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/B.png\");\n    letterImages[\"c\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/C.png\");\n    letterImages[\"d\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/D.png\");\n    letterImages[\"e\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/E.png\");\n    letterImages[\"f\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/F.png\");\n    letterImages[\"g\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/G.png\");\n    letterImages[\"h\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/H.png\");\n    letterImages[\"i\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/I.png\");\n    letterImages[\"j\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/J.png\");\n    letterImages[\"k\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/K.png\");\n    letterImages[\"l\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/L.png\");\n    letterImages[\"m\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/M.png\");\n    letterImages[\"n\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/N.png\");\n    letterImages[\"o\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/O.png\");\n    letterImages[\"p\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/P.png\");\n    letterImages[\"q\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Q.png\");\n    letterImages[\"r\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/R.png\");\n    letterImages[\"s\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/S.png\");\n    letterImages[\"t\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/T.png\");\n    letterImages[\"u\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/U.png\");\n    letterImages[\"v\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/V.png\");\n    letterImages[\"w\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/W.png\");\n    letterImages[\"x\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/X.png\");\n    letterImages[\"y\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Y.png\");\n    letterImages[\"z\"].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Z.png\");\n    letterImages.yes.src = require(\"../../assets/imgs/game_imgs/hand_gesture/YES.png\");\n    function drawRoad() {\n      ctx.fillStyle = \"#17a1be\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.fillStyle = colors.gray;\n      ctx.fillRect(150, 0, roadWidth, height);\n      ctx.fillStyle = colors.white;\n      ctx.fillRect(145, 0, markerWidth, height);\n      ctx.fillRect(345, 0, markerWidth, height);\n    }\n    function drawLaneMarkers() {\n      laneMarkerMoveY += speed * 2;\n      if (laneMarkerMoveY >= markerHeight * 2) {\n        laneMarkerMoveY = 0;\n      }\n      ctx.fillStyle = colors.yellow;\n      for (let y = markerHeight * -2; y < height; y += markerHeight * 2) {\n        ctx.fillRect(width / 2 - markerWidth / 2, y + laneMarkerMoveY, markerWidth, markerHeight);\n      }\n    }\n    function drawPlayer() {\n      ctx.drawImage(carImage, player.x - player.width / 2, player.y - player.height / 2, player.width, player.height);\n    }\n    function drawVehicles() {\n      vehicles.forEach(vehicle => {\n        ctx.drawImage(vehicle.image, vehicle.x - vehicle.width / 2, vehicle.y - vehicle.height / 2, vehicle.width, vehicle.height);\n      });\n    }\n    function drawScore() {\n      ctx.font = \"16px Arial\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(`Score: ${Math.round(score * 100) / 100}`, 50, 50);\n      ctx.fillText(`Speed: ${Math.round(speed * 100) / 100}`, 50, 70);\n    }\n    function drawWord() {\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(`You need to type: ${currentWord}`, width / 2 - 80, 50);\n    }\n    function drawTypedWord() {\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(`Your typing: ${typedWord}`, 20, 100);\n      let xPos = 20;\n      let nextCharacter = currentWord[typedWord.length];\n      const image = letterImages[nextCharacter];\n      ctx.drawImage(image, xPos, 120, 50, 50);\n    }\n    function drawGameOver() {\n      ctx.drawImage(crashImage, crashRect.x - crashRect.width / 2, crashRect.y - crashRect.height / 2);\n      ctx.fillStyle = colors.red;\n      ctx.fillRect(0, 50, width, 100);\n      ctx.fillStyle = \"#fff\";\n      ctx.fillText(\"You lose! Use the YES hand sign to start!\", width / 2 - 200, 110);\n      const image = letterImages[\"yes\"];\n      ctx.drawImage(image, 180, 180, 80, 80);\n    }\n    function drawStartScreen() {\n      ctx.fillStyle = colors.gray;\n      ctx.fillRect(0, 0, width, height);\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"#000000\";\n      ctx.clearRect(0, 0, width, height);\n      drawRoad(ctx);\n      drawLaneMarkers(ctx);\n      drawPlayer(ctx);\n      drawVehicles(ctx);\n    }\n    function gameBegin() {\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(width / 2 - 250, 37, 500, 100);\n      ctx.fillStyle = \"#000\";\n      ctx.fillText(\"Use the YES hand sign to start!\", width / 2 - 200, 100);\n      ctx.fillStyle = \"#fff\";\n      const image = letterImages[\"yes\"];\n      ctx.drawImage(image, 220, 180, 80, 80);\n    }\n    function updateVehicles() {\n      if (vehicles.length < 2) {\n        let addVehicle = true;\n        for (let vehicle of vehicles) {\n          if (vehicle.y < vehicle.height * 1.5) {\n            addVehicle = false;\n          }\n        }\n        if (addVehicle) {\n          const lane = lanes[Math.floor(Math.random() * lanes.length)];\n          const image = vehicleImages[Math.floor(Math.random() * vehicleImages.length)];\n          vehicles.push({\n            image,\n            x: lane,\n            y: -image.height / 2,\n            width: 45,\n            height: 90\n          });\n        }\n      }\n      vehicles = vehicles.map(vehicle => {\n        vehicle.y += speed;\n        return vehicle;\n      }).filter(vehicle => {\n        if (vehicle.y >= height) {\n          score++;\n          if (score % 5 === 0) speed++;\n          return false;\n        }\n        return true;\n      });\n    }\n    function gameLoop() {\n      ctx.clearRect(0, 0, width, height);\n      drawRoad();\n      drawLaneMarkers();\n      drawPlayer();\n      drawVehicles();\n      drawScore();\n      drawWord();\n      drawTypedWord();\n      if (checkCollisions()) {\n        drawGameOver();\n      } else {\n        updateVehicles();\n        requestAnimationFrame(gameLoop);\n      }\n    }\n    function startGame() {\n      gameover = false;\n      score = 0;\n      vehicles = [];\n      player.x = leftLane;\n      player.y = playerY;\n      currentWord = words[Math.floor(Math.random() * words.length)];\n      typedWord = \"\";\n      requestAnimationFrame(gameLoop);\n    }\n    function gameAction(action) {\n      if (gameover) {\n        if (action === \"y\" || action === \"Y\") {\n          startGame();\n        } else if (action === \"n\" || action === \"N\") {\n          gameover = false;\n        }\n      } else {\n        if (action.length === 1 && /[a-zA-Z]/.test(action)) {\n          typedWord += action.toLowerCase();\n          if (typedWord === currentWord) {\n            player.x = player.x === leftLane ? rightLane : leftLane;\n            currentWord = words[Math.floor(Math.random() * words.length)];\n            typedWord = \"\";\n            if (speed < 2) speed += 0.01;\n            score += 100 * speed;\n          } else if (!currentWord.startsWith(typedWord)) {\n            typedWord = typedWord.slice(0, -1);\n          }\n        }\n      }\n    }\n    function checkCollisions() {\n      for (let vehicle of vehicles) {\n        if (Math.abs(vehicle.x - player.x) < player.width && Math.abs(vehicle.y - player.y) < player.height) {\n          gameover = true;\n          crashRect = {\n            x: player.x,\n            y: (player.y + vehicle.y) / 2,\n            width: crashImage.width,\n            height: crashImage.height\n          };\n          return true;\n        }\n      }\n      return false;\n    }\n    document.addEventListener(\"keydown\", event => {\n      gameAction(event.key);\n    });\n\n    ////\n    const loadPromises = Object.values(letterImages).map(img => {\n      return new Promise(resolve => {\n        img.onload = resolve;\n      });\n    });\n    Promise.all(loadPromises).then(() => {\n      // Draw the start screen once all images are loaded\n      drawStartScreen(ctx);\n    });\n    document.addEventListener(\"keydown\", event => {\n      gameAction(event.key);\n    });\n\n    //\n    let detect = new SLRdetect();\n    function callback(data) {\n      if (data == \"Y\" || data == \"Yes\") gameAction(\"y\");\n      if (data == \"n\" || data == \"No\") gameAction(\"n\");\n      gameAction(data.toLowerCase());\n    }\n    detect.init(callback);\n    const startBtn = document.getElementById(\"startBtn\");\n    const liveView = document.getElementById(\"liveView\");\n    startBtn.addEventListener(\"click\", () => {\n      console.log(\"click\");\n      liveView.style.display = \"block\";\n      startBtn.style.display = \"none\";\n      gameBegin(ctx);\n    });\n    //\n  }, []);\n  const constraints = {\n    video: {\n      facingMode: {\n        exact: \"environment\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.instructionsTxt,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"HOW TO PLAY: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), \"Press start, then use hand gestures in front of the camera to control the car!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: styles.gameCanvas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"liveView\",\n          className: styles.liveView,\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"webcam\",\n            className: styles.webcam,\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"startBtn\",\n      className: styles.startBtn,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gesture_output\",\n        className: styles.gesture_output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","SLRdetect","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","canvasRef","canvas","current","ctx","getContext","width","height","colors","gray","green","red","white","yellow","roadWidth","markerWidth","markerHeight","leftLane","rightLane","lanes","playerX","playerY","fps","gameover","speed","score","lastTime","Date","now","carImage","Image","src","require","crashImage","vehicleImages","map","img","player","x","y","vehicles","laneMarkerMoveY","crashRect","words","currentWord","Math","floor","random","length","typedWord","letterImages","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","z","yes","drawRoad","fillStyle","fillRect","drawLaneMarkers","drawPlayer","drawImage","drawVehicles","forEach","vehicle","image","drawScore","font","fillText","round","drawWord","drawTypedWord","xPos","nextCharacter","drawGameOver","drawStartScreen","clearRect","gameBegin","updateVehicles","addVehicle","lane","push","filter","gameLoop","checkCollisions","requestAnimationFrame","startGame","gameAction","action","test","toLowerCase","startsWith","slice","abs","document","addEventListener","event","key","loadPromises","Object","values","Promise","resolve","onload","all","then","detect","callback","data","init","startBtn","getElementById","liveView","console","log","style","display","constraints","video","facingMode","exact","className","mainContainer","children","instructionsTxt","fileName","_jsxFileName","lineNumber","columnNumber","container","ref","gameCanvas","id","webcam","autoPlay","playsInline","gesture_output","_c","$RefreshReg$"],"sources":["D:/2ndProject/2ndproject/src/pages/game/game_page.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./game_page.module.css\";\r\nimport { SLRdetect } from \"../../utilities/detect.js\";\r\n\r\nconst GamePage = () => {\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const width = 500;\r\n    const height = 500;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    const colors = {\r\n      gray: \"#646464\",\r\n      green: \"#4CD038\",\r\n      red: \"#C80000\",\r\n      white: \"#FFFFFF\",\r\n      yellow: \"#FFE800\",\r\n    };\r\n\r\n    const roadWidth = 200;\r\n    const markerWidth = 10;\r\n    const markerHeight = 50;\r\n\r\n    const leftLane = 200;\r\n    const rightLane = 300;\r\n    const lanes = [leftLane, rightLane];\r\n\r\n    const playerX = leftLane; // Start in the left lane\r\n    const playerY = 400;\r\n    const fps = 60;\r\n    let gameover = true;\r\n    let speed = 0.9;\r\n    let score = 0;\r\n    let lastTime = Date.now();\r\n\r\n    const carImage = new Image();\r\n    carImage.src = require(\"../../assets/imgs/game_imgs/car.png\");\r\n\r\n    const crashImage = new Image();\r\n    crashImage.src = require(\"../../assets/imgs/game_imgs/crash.png\");\r\n\r\n    const vehicleImages = [\r\n      require(\"../../assets/imgs/game_imgs/pickup_truck.png\"),\r\n      require(\"../../assets/imgs/game_imgs/semi_trailer.png\"),\r\n      require(\"../../assets/imgs/game_imgs/taxi.png\"),\r\n      require(\"../../assets/imgs/game_imgs/van.png\"),\r\n    ].map((src) => {\r\n      const img = new Image();\r\n      img.src = src;\r\n      return img;\r\n    });\r\n\r\n    const player = { x: playerX, y: playerY, width: 45, height: 90 };\r\n\r\n    let vehicles = [];\r\n    let laneMarkerMoveY = 0;\r\n    let crashRect = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n    const words = [\"dog\", \"buy\", \"sad\", \"bad\", \"rat\", \"cow\", \"owl\", \"bee\"];\r\n    let currentWord = words[Math.floor(Math.random() * words.length)];\r\n    let typedWord = \"\";\r\n\r\n    const letterImages = {\r\n      a: new Image(),\r\n      b: new Image(),\r\n      c: new Image(),\r\n      d: new Image(),\r\n      e: new Image(),\r\n      f: new Image(),\r\n      g: new Image(),\r\n      h: new Image(),\r\n      i: new Image(),\r\n      j: new Image(),\r\n      k: new Image(),\r\n      l: new Image(),\r\n      m: new Image(),\r\n      n: new Image(),\r\n      o: new Image(),\r\n      p: new Image(),\r\n      q: new Image(),\r\n      r: new Image(),\r\n      s: new Image(),\r\n      t: new Image(),\r\n      u: new Image(),\r\n      v: new Image(),\r\n      w: new Image(),\r\n      x: new Image(),\r\n      y: new Image(),\r\n      z: new Image(),\r\n      yes: new Image(),\r\n    };\r\n\r\n    letterImages[\r\n      \"a\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/A.png\");\r\n    letterImages[\r\n      \"b\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/B.png\");\r\n    letterImages[\r\n      \"c\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/C.png\");\r\n    letterImages[\r\n      \"d\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/D.png\");\r\n    letterImages[\r\n      \"e\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/E.png\");\r\n    letterImages[\r\n      \"f\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/F.png\");\r\n    letterImages[\r\n      \"g\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/G.png\");\r\n    letterImages[\r\n      \"h\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/H.png\");\r\n    letterImages[\r\n      \"i\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/I.png\");\r\n    letterImages[\r\n      \"j\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/J.png\");\r\n    letterImages[\r\n      \"k\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/K.png\");\r\n    letterImages[\r\n      \"l\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/L.png\");\r\n    letterImages[\r\n      \"m\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/M.png\");\r\n    letterImages[\r\n      \"n\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/N.png\");\r\n    letterImages[\r\n      \"o\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/O.png\");\r\n    letterImages[\r\n      \"p\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/P.png\");\r\n    letterImages[\r\n      \"q\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Q.png\");\r\n    letterImages[\r\n      \"r\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/R.png\");\r\n    letterImages[\r\n      \"s\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/S.png\");\r\n    letterImages[\r\n      \"t\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/T.png\");\r\n    letterImages[\r\n      \"u\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/U.png\");\r\n    letterImages[\r\n      \"v\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/V.png\");\r\n    letterImages[\r\n      \"w\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/W.png\");\r\n    letterImages[\r\n      \"x\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/X.png\");\r\n    letterImages[\r\n      \"y\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Y.png\");\r\n    letterImages[\r\n      \"z\"\r\n    ].src = require(\"../../assets/imgs/game_imgs/hand_gesture/Z.png\");\r\n    letterImages.yes.src = require(\"../../assets/imgs/game_imgs/hand_gesture/YES.png\");\r\n\r\n    function drawRoad() {\r\n      ctx.fillStyle = \"#17a1be\";\r\n      ctx.fillRect(0, 0, width, height);\r\n\r\n      ctx.fillStyle = colors.gray;\r\n      ctx.fillRect(150, 0, roadWidth, height);\r\n\r\n      ctx.fillStyle = colors.white;\r\n      ctx.fillRect(145, 0, markerWidth, height);\r\n      ctx.fillRect(345, 0, markerWidth, height);\r\n    }\r\n\r\n    function drawLaneMarkers() {\r\n      laneMarkerMoveY += speed * 2;\r\n      if (laneMarkerMoveY >= markerHeight * 2) {\r\n        laneMarkerMoveY = 0;\r\n      }\r\n      ctx.fillStyle = colors.yellow;\r\n      for (let y = markerHeight * -2; y < height; y += markerHeight * 2) {\r\n        ctx.fillRect(\r\n          width / 2 - markerWidth / 2,\r\n          y + laneMarkerMoveY,\r\n          markerWidth,\r\n          markerHeight\r\n        );\r\n      }\r\n    }\r\n\r\n    function drawPlayer() {\r\n      ctx.drawImage(\r\n        carImage,\r\n        player.x - player.width / 2,\r\n        player.y - player.height / 2,\r\n        player.width,\r\n        player.height\r\n      );\r\n    }\r\n\r\n    function drawVehicles() {\r\n      vehicles.forEach((vehicle) => {\r\n        ctx.drawImage(\r\n          vehicle.image,\r\n          vehicle.x - vehicle.width / 2,\r\n          vehicle.y - vehicle.height / 2,\r\n          vehicle.width,\r\n          vehicle.height\r\n        );\r\n      });\r\n    }\r\n\r\n    function drawScore() {\r\n      ctx.font = \"16px Arial\";\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(`Score: ${Math.round(score * 100) / 100}`, 50, 50);\r\n      ctx.fillText(`Speed: ${Math.round(speed * 100) / 100}`, 50, 70);\r\n    }\r\n\r\n    function drawWord() {\r\n      ctx.font = \"20px Arial\";\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(`You need to type: ${currentWord}`, width / 2 - 80, 50);\r\n    }\r\n\r\n    function drawTypedWord() {\r\n      ctx.font = \"20px Arial\";\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(`Your typing: ${typedWord}`, 20, 100);\r\n\r\n      let xPos = 20;\r\n      let nextCharacter = currentWord[typedWord.length];\r\n      const image = letterImages[nextCharacter];\r\n      ctx.drawImage(image, xPos, 120, 50, 50);\r\n    }\r\n\r\n    function drawGameOver() {\r\n      ctx.drawImage(\r\n        crashImage,\r\n        crashRect.x - crashRect.width / 2,\r\n        crashRect.y - crashRect.height / 2\r\n      );\r\n      ctx.fillStyle = colors.red;\r\n      ctx.fillRect(0, 50, width, 100);\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fillText(\r\n        \"You lose! Use the YES hand sign to start!\",\r\n        width / 2 - 200,\r\n        110\r\n      );\r\n      const image = letterImages[\"yes\"];\r\n      ctx.drawImage(image, 180, 180, 80, 80);\r\n    }\r\n\r\n    function drawStartScreen() {\r\n      ctx.fillStyle = colors.gray;\r\n      ctx.fillRect(0, 0, width, height);\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawRoad(ctx);\r\n      drawLaneMarkers(ctx);\r\n      drawPlayer(ctx);\r\n      drawVehicles(ctx);\r\n    }\r\n\r\n    function gameBegin() {\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fillRect(width / 2 - 250, 37, 500, 100);\r\n      ctx.fillStyle = \"#000\";\r\n      ctx.fillText(\"Use the YES hand sign to start!\", width / 2 - 200, 100);\r\n      ctx.fillStyle = \"#fff\";\r\n      const image = letterImages[\"yes\"];\r\n      ctx.drawImage(image, 220, 180, 80, 80);\r\n    }\r\n\r\n    function updateVehicles() {\r\n      if (vehicles.length < 2) {\r\n        let addVehicle = true;\r\n        for (let vehicle of vehicles) {\r\n          if (vehicle.y < vehicle.height * 1.5) {\r\n            addVehicle = false;\r\n          }\r\n        }\r\n        if (addVehicle) {\r\n          const lane = lanes[Math.floor(Math.random() * lanes.length)];\r\n          const image =\r\n            vehicleImages[Math.floor(Math.random() * vehicleImages.length)];\r\n          vehicles.push({\r\n            image,\r\n            x: lane,\r\n            y: -image.height / 2,\r\n            width: 45,\r\n            height: 90,\r\n          });\r\n        }\r\n      }\r\n      vehicles = vehicles\r\n        .map((vehicle) => {\r\n          vehicle.y += speed;\r\n          return vehicle;\r\n        })\r\n        .filter((vehicle) => {\r\n          if (vehicle.y >= height) {\r\n            score++;\r\n            if (score % 5 === 0) speed++;\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n    }\r\n    function gameLoop() {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawRoad();\r\n      drawLaneMarkers();\r\n      drawPlayer();\r\n      drawVehicles();\r\n      drawScore();\r\n      drawWord();\r\n      drawTypedWord();\r\n\r\n      if (checkCollisions()) {\r\n        drawGameOver();\r\n      } else {\r\n        updateVehicles();\r\n        requestAnimationFrame(gameLoop);\r\n      }\r\n    }\r\n\r\n    function startGame() {\r\n      gameover = false;\r\n      score = 0;\r\n      vehicles = [];\r\n      player.x = leftLane;\r\n      player.y = playerY;\r\n      currentWord = words[Math.floor(Math.random() * words.length)];\r\n      typedWord = \"\";\r\n      requestAnimationFrame(gameLoop);\r\n    }\r\n\r\n    function gameAction(action) {\r\n      if (gameover) {\r\n        if (action === \"y\" || action === \"Y\") {\r\n          startGame();\r\n        } else if (action === \"n\" || action === \"N\") {\r\n          gameover = false;\r\n        }\r\n      } else {\r\n        if (action.length === 1 && /[a-zA-Z]/.test(action)) {\r\n          typedWord += action.toLowerCase();\r\n          if (typedWord === currentWord) {\r\n            player.x = player.x === leftLane ? rightLane : leftLane;\r\n            currentWord = words[Math.floor(Math.random() * words.length)];\r\n            typedWord = \"\";\r\n            if (speed < 2) speed += 0.01;\r\n            score += 100 * speed;\r\n          } else if (!currentWord.startsWith(typedWord)) {\r\n            typedWord = typedWord.slice(0, -1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function checkCollisions() {\r\n      for (let vehicle of vehicles) {\r\n        if (\r\n          Math.abs(vehicle.x - player.x) < player.width &&\r\n          Math.abs(vehicle.y - player.y) < player.height\r\n        ) {\r\n          gameover = true;\r\n          crashRect = {\r\n            x: player.x,\r\n            y: (player.y + vehicle.y) / 2,\r\n            width: crashImage.width,\r\n            height: crashImage.height,\r\n          };\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      gameAction(event.key);\r\n    });\r\n\r\n    ////\r\n    const loadPromises = Object.values(letterImages).map((img) => {\r\n      return new Promise((resolve) => {\r\n        img.onload = resolve;\r\n      });\r\n    });\r\n\r\n    Promise.all(loadPromises).then(() => {\r\n      // Draw the start screen once all images are loaded\r\n      drawStartScreen(ctx);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      gameAction(event.key);\r\n    });\r\n\r\n    //\r\n    let detect = new SLRdetect();\r\n    function callback(data) {\r\n      if (data == \"Y\" || data == \"Yes\") gameAction(\"y\");\r\n      if (data == \"n\" || data == \"No\") gameAction(\"n\");\r\n      gameAction(data.toLowerCase());\r\n    }\r\n    detect.init(callback);\r\n\r\n    const startBtn = document.getElementById(\"startBtn\");\r\n    const liveView = document.getElementById(\"liveView\");\r\n\r\n    startBtn.addEventListener(\"click\", () => {\r\n      console.log(\"click\");\r\n      liveView.style.display = \"block\";\r\n      startBtn.style.display = \"none\";\r\n\r\n      gameBegin(ctx);\r\n    });\r\n    //\r\n  }, []);\r\n  const constraints = {\r\n    video: {\r\n      facingMode: {\r\n        exact: \"environment\",\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <>\r\n        <p className={styles.instructionsTxt}>\r\n          <b>HOW TO PLAY: </b>Press start, then use hand gestures in front of\r\n          the camera to control the car!\r\n        </p>\r\n      </>\r\n      <>\r\n        <div className={styles.container}>\r\n          <canvas ref={canvasRef} className={styles.gameCanvas} />\r\n          <div id=\"liveView\" className={styles.liveView}>\r\n            {/* <div> */}\r\n            <video id=\"webcam\" className={styles.webcam} autoPlay playsInline />\r\n            {/* <canvas\r\n              id=\"output_canvas\"\r\n              className={styles.output_canvas}\r\n              width=\"1280\"\r\n              height=\"720\"\r\n            /> */}\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n      <button id=\"startBtn\" className={styles.startBtn}>\r\n        Start\r\n      </button>\r\n\r\n      <>\r\n        <div id=\"gesture_output\" className={styles.gesture_output} />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}