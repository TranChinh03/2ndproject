{"ast":null,"code":"import { GestureRecognizer, FilesetResolver } from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3\";\nexport class SLRdetect {\n  constructor() {\n    this.gestureRecognizer = null;\n    this.runningMode = \"VIDEO\";\n    this.enablestartBtn = null;\n    this.webcamRunning = false;\n    this.stream = null;\n    this.video = null;\n    this.gestureOutput = null;\n    this.lastVideoTime = -1;\n    this.results = undefined;\n    this.enableCam = this.enableCam.bind(this);\n    this.predictWebcam = this.predictWebcam.bind(this);\n    this.callback = null;\n    this.lastCharacter = null;\n    this.confidence = 0;\n    this.confidenceThreshold = 10;\n  }\n  async init(callback) {\n    await this.createGestureRecognizer();\n    if (this.hasGetUserMedia()) {\n      this.enablestartBtn = document.getElementById(\"startBtn\");\n      this.enablestartBtn.addEventListener(\"click\", this.enableCam);\n    } else {\n      console.warn(\"getUserMedia() is not supported by your browser\");\n    }\n    this.callback = callback;\n  }\n  async createGestureRecognizer() {\n    const vision = await FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3/wasm\");\n    this.gestureRecognizer = await GestureRecognizer.createFromOptions(vision, {\n      baseOptions: {\n        modelAssetPath: require(\"./sign_language_recognizer.task\"),\n        delegate: \"GPU\"\n      },\n      runningMode: this.runningMode\n    });\n  }\n  hasGetUserMedia() {\n    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n  }\n  enableCam(event) {\n    this.video = document.getElementById(\"webcam\");\n    this.gestureOutput = document.getElementById(\"gesture_output\");\n    if (!this.gestureRecognizer) {\n      alert(\"Please wait for gestureRecognizer to load\");\n      return;\n    }\n    if (this.webcamRunning === true) {\n      this.webcamRunning = false;\n      this.enablestartBtn.innerText = \"ENABLE PREDICTIONS\";\n      this.video.srcObject.getTracks().forEach(track => track.stop());\n      this.video.srcObject = null;\n    } else {\n      this.webcamRunning = true;\n      this.enablestartBtn.innerText = \"DISABLE PREDICTIONS\";\n    }\n    const constraints = {\n      video: true\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      this.video.srcObject = stream;\n      this.video.addEventListener(\"loadeddata\", this.predictWebcam);\n    });\n  }\n  async predictWebcam() {\n    const webcamElement = document.getElementById(\"webcam\");\n    let nowInMs = Date.now();\n    if (this.video.currentTime !== this.lastVideoTime) {\n      this.lastVideoTime = this.video.currentTime;\n      this.results = this.gestureRecognizer.recognizeForVideo(this.video, nowInMs);\n    }\n    if (this.results.gestures.length > 0) {\n      const categoryName = this.results.gestures[0][0].categoryName;\n      const categoryScore = parseFloat(this.results.gestures[0][0].score * 100).toFixed(2);\n      const handedness = this.results.handednesses[0][0].displayName;\n      this.gestureOutput.style.display = \"block\";\n      this.gestureOutput.innerText = `Your hand gesture: ${categoryName}\\n Confidence: ${categoryScore} %\\n Handedness: ${handedness}`;\n      if (categoryName !== \"\") {\n        if (this.lastCharacter !== categoryName) {\n          this.lastCharacter = categoryName;\n          this.confidence = 0;\n        } else {\n          this.confidence += 1;\n          if (this.confidence === this.confidenceThreshold) {\n            console.log(\"detected \", categoryName);\n            if (this.callback) {\n              this.callback(categoryName);\n            }\n          }\n        }\n      }\n    } else {\n      this.gestureOutput.style.display = \"none\";\n    }\n    if (this.webcamRunning === true) {\n      window.requestAnimationFrame(this.predictWebcam);\n    }\n  }\n}","map":{"version":3,"names":["GestureRecognizer","FilesetResolver","SLRdetect","constructor","gestureRecognizer","runningMode","enablestartBtn","webcamRunning","stream","video","gestureOutput","lastVideoTime","results","undefined","enableCam","bind","predictWebcam","callback","lastCharacter","confidence","confidenceThreshold","init","createGestureRecognizer","hasGetUserMedia","document","getElementById","addEventListener","console","warn","vision","forVisionTasks","createFromOptions","baseOptions","modelAssetPath","require","delegate","navigator","mediaDevices","getUserMedia","event","alert","innerText","srcObject","getTracks","forEach","track","stop","constraints","then","webcamElement","nowInMs","Date","now","currentTime","recognizeForVideo","gestures","length","categoryName","categoryScore","parseFloat","score","toFixed","handedness","handednesses","displayName","style","display","log","window","requestAnimationFrame"],"sources":["D:/2ndProject/2ndproject/src/utilities/detect.js"],"sourcesContent":["import {\r\n  GestureRecognizer,\r\n  FilesetResolver,\r\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3\";\r\n\r\nexport class SLRdetect {\r\n  constructor() {\r\n    this.gestureRecognizer = null;\r\n    this.runningMode = \"VIDEO\";\r\n    this.enablestartBtn = null;\r\n    this.webcamRunning = false;\r\n    this.stream = null;\r\n    this.video = null;\r\n    this.gestureOutput = null;\r\n    this.lastVideoTime = -1;\r\n    this.results = undefined;\r\n    this.enableCam = this.enableCam.bind(this);\r\n    this.predictWebcam = this.predictWebcam.bind(this);\r\n    this.callback = null;\r\n    this.lastCharacter = null;\r\n    this.confidence = 0;\r\n    this.confidenceThreshold = 10;\r\n  }\r\n\r\n  async init(callback) {\r\n    await this.createGestureRecognizer();\r\n    if (this.hasGetUserMedia()) {\r\n      this.enablestartBtn = document.getElementById(\"startBtn\");\r\n      this.enablestartBtn.addEventListener(\"click\", this.enableCam);\r\n    } else {\r\n      console.warn(\"getUserMedia() is not supported by your browser\");\r\n    }\r\n    this.callback = callback;\r\n  }\r\n\r\n  async createGestureRecognizer() {\r\n    const vision = await FilesetResolver.forVisionTasks(\r\n      \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3/wasm\"\r\n    );\r\n    this.gestureRecognizer = await GestureRecognizer.createFromOptions(vision, {\r\n      baseOptions: {\r\n        modelAssetPath: require(\"./sign_language_recognizer.task\"),\r\n        delegate: \"GPU\",\r\n      },\r\n      runningMode: this.runningMode,\r\n    });\r\n  }\r\n\r\n  hasGetUserMedia() {\r\n    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\r\n  }\r\n\r\n  enableCam(event) {\r\n    this.video = document.getElementById(\"webcam\");\r\n    this.gestureOutput = document.getElementById(\"gesture_output\");\r\n\r\n    if (!this.gestureRecognizer) {\r\n      alert(\"Please wait for gestureRecognizer to load\");\r\n      return;\r\n    }\r\n\r\n    if (this.webcamRunning === true) {\r\n      this.webcamRunning = false;\r\n      this.enablestartBtn.innerText = \"ENABLE PREDICTIONS\";\r\n      this.video.srcObject.getTracks().forEach((track) => track.stop());\r\n      this.video.srcObject = null;\r\n    } else {\r\n      this.webcamRunning = true;\r\n      this.enablestartBtn.innerText = \"DISABLE PREDICTIONS\";\r\n    }\r\n\r\n    const constraints = {\r\n      video: true,\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n      this.video.srcObject = stream;\r\n      this.video.addEventListener(\"loadeddata\", this.predictWebcam);\r\n    });\r\n  }\r\n\r\n  async predictWebcam() {\r\n    const webcamElement = document.getElementById(\"webcam\");\r\n    let nowInMs = Date.now();\r\n    if (this.video.currentTime !== this.lastVideoTime) {\r\n      this.lastVideoTime = this.video.currentTime;\r\n      this.results = this.gestureRecognizer.recognizeForVideo(\r\n        this.video,\r\n        nowInMs\r\n      );\r\n    }\r\n\r\n    if (this.results.gestures.length > 0) {\r\n      const categoryName = this.results.gestures[0][0].categoryName;\r\n      const categoryScore = parseFloat(\r\n        this.results.gestures[0][0].score * 100\r\n      ).toFixed(2);\r\n      const handedness = this.results.handednesses[0][0].displayName;\r\n      this.gestureOutput.style.display = \"block\";\r\n      this.gestureOutput.innerText = `Your hand gesture: ${categoryName}\\n Confidence: ${categoryScore} %\\n Handedness: ${handedness}`;\r\n\r\n      if (categoryName !== \"\") {\r\n        if (this.lastCharacter !== categoryName) {\r\n          this.lastCharacter = categoryName;\r\n          this.confidence = 0;\r\n        } else {\r\n          this.confidence += 1;\r\n          if (this.confidence === this.confidenceThreshold) {\r\n            console.log(\"detected \", categoryName);\r\n            if (this.callback) {\r\n              this.callback(categoryName);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.gestureOutput.style.display = \"none\";\r\n    }\r\n\r\n    if (this.webcamRunning === true) {\r\n      window.requestAnimationFrame(this.predictWebcam);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}